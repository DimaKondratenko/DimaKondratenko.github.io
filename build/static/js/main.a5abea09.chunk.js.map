{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onChangeFilter","clazz","AddItem","onLabelChange","onSubmit","preventDefault","onAdd","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","doneCount","todoCount","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"oWAEeA,G,MCCG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACtB,OACI,yBAAKC,UAAU,qBACf,4CACA,4BAAKF,EAAL,mBAA2BC,MCLpBE,G,kNCIXC,MAAQ,CACJC,KAAM,I,EAGVC,eAAiB,SAACC,GACd,IAAMF,EAAOE,EAAEC,OAAOC,MACtB,EAAKC,SAAS,CAACL,SACf,EAAKM,MAAML,eAAeD,I,uDAG1B,OACI,6BACK,2BAAOO,KAAK,OACbV,UAAU,4BACVW,YAAY,iBACZC,SAAUC,KAAKT,sB,GAjBUU,c,QCF1BC,G,6KCIL,IAAD,EAG2BF,KAAKJ,MAFzBO,EADP,EACOA,MAAOC,EADd,EACcA,UACPC,EAFP,EAEOA,kBAAmBC,EAF1B,EAE0BA,aACnBC,EAHP,EAGOA,UAGJC,EAAa,iBAOjB,OAbC,EAGkBtB,OAKfsB,GAAc,SAEfD,IACCC,GAAc,cAId,0BAAMrB,UAAWqB,GACb,0BACIrB,UAAU,uBAEVsB,QAASH,GAEXH,GAGF,4BAAQN,KAAK,SACLV,UAAU,6CACVsB,QAASJ,GACd,uBAAGlB,UAAU,uBAEf,4BAAQU,KAAK,SACLV,UAAU,4CACVsB,QAAUL,GAChB,uBAAGjB,UAAU,sB,GAlCUc,cCF3BS,G,MCEG,SAAC,GAEqB,IAFnBC,EAEkB,EAFlBA,MAAQP,EAEU,EAFVA,UACRC,EACkB,EADlBA,kBACAC,EAAkB,EAAlBA,aAEXM,EAAWD,EAAME,KAAI,SAACC,GAAU,IAE5BC,EAAoBD,EAApBC,GAAOC,EAFoB,YAEPF,EAFO,QAGjC,OACA,wBAAIG,IAAKH,EAAKC,GAAI5B,UAAU,mBAC1B,kBAAC,EAAD,iBAAkB6B,EAAlB,CACAZ,UAAW,WAAOA,EAAUW,IAC5BV,kBAAmB,WAAQA,EAAkBU,IAC7CT,aAAc,WAAQA,EAAaS,WAIzC,OACG,wBAAI5B,UAAU,wBACXyB,KCpBKM,G,wNCIVC,QAAU,CACP,CAACC,KAAM,MAAQjB,MAAO,OACtB,CAACiB,KAAM,SAAWjB,MAAO,UACzB,CAACiB,KAAM,OAASjB,MAAO,S,uDAEjB,IAAD,EAC8BH,KAAKJ,MAAhCyB,EADH,EACGA,OAAQC,EADX,EACWA,eACVH,EAAUnB,KAAKmB,QAAQN,KAAI,YAAoB,IAAlBO,EAAiB,EAAjBA,KAAMjB,EAAW,EAAXA,MAE/BoB,EADWF,IAAWD,EACF,WAAa,wBACvC,OACI,4BAAQvB,KAAK,SACLV,UAAS,cAASoC,GAClBN,IAAKG,EACLX,QAAW,kBAAMa,EAAeF,KACvCjB,MAIP,OACM,yBAAKhB,UAAU,iBACXgC,O,GAvB0BlB,cCD/BuB,G,kNCCXnC,MAAQ,CACJc,MAAO,I,EAEXsB,cAAgB,SAACjC,GACd,EAAKG,SAAS,CACTQ,MAAOX,EAAEC,OAAOC,S,EAGxBgC,SAAW,SAAClC,GACRA,EAAEmC,iBACF,EAAK/B,MAAMgC,MAAM,EAAKvC,MAAMc,OAC5B,EAAKR,SAAS,CACVQ,MAAO,M,uDAKP,OACC,0BAAMhB,UAAU,kBAChBuC,SAAY1B,KAAK0B,UACd,2BACG7B,KAAK,OACLV,UAAU,eACVY,SAAUC,KAAKyB,cACf3B,YAAY,wBACZJ,MAAOM,KAAKX,MAAMc,QACrB,4BAAQhB,UAAU,6BAAlB,iB,GA3BqBc,cCDrB4B,E,4MCWdC,MAAQ,I,EAERzC,MAAQ,CACN0C,SAAU,CACR,EAAKC,eAAe,gBACpB,EAAKA,eAAe,oBACpB,EAAKA,eAAe,iBAEtB1C,KAAM,GACN+B,OAAQ,O,EAWVY,WAAa,SAAClB,GACX,EAAKpB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACRG,EAAMH,EAASI,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KAMnD,MAAO,CACLgB,SANc,sBACTA,EAASM,MAAM,EAAGH,IADT,YAETH,EAASM,MAAMH,EAAM,U,EAQlCI,QAAU,SAACC,GAEP,IAAMC,EAAU,EAAKR,eAAeO,GAGrC,EAAK5C,UAAS,YAAiB,IAAfoC,EAAc,EAAdA,SAKf,MAAO,CACLA,SALU,sBACPA,GADO,CAEVS,S,EAQNC,eAAiB,SAACC,EAAK3B,EAAI4B,GACzB,IAAMT,EAAMQ,EAAIP,WAAU,SAACC,GAAD,OAAQA,EAAGrB,KAAOA,KAEtC6B,EAAUF,EAAIR,GACdM,EAAO,eAAOI,EAAP,eACND,GAAYC,EAAQD,KAG3B,MAAM,GAAN,mBACKD,EAAIL,MAAM,EAAGH,IADlB,CAEEM,GAFF,YAGKE,EAAIL,MAAMH,EAAM,M,EAGvB7B,kBAAoB,SAACU,GACnB,EAAKpB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACf,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUhB,EAAK,kB,EAKnDT,aAAe,SAACS,GACf,EAAKpB,UAAS,YAAmB,IAAhBoC,EAAe,EAAfA,SACZ,MAAO,CACLA,SAAU,EAAKU,eAAeV,EAAUhB,EAAK,a,EAKrDxB,eAAiB,SAACD,GAChB,EAAKK,SAAS,CAAEL,U,EAGlBgC,eAAiB,SAACD,GAChB,EAAK1B,SAAS,CAAE0B,Y,6DAxEDlB,GACb,MAAO,CACLA,QACAI,WAAW,EACXQ,GAAIf,KAAK8B,W,6BAuERe,EAAOvD,GACZ,OAAmB,IAAhBA,EAAKwD,OACCD,EAEFA,EAAMxB,QAAO,SAACP,GACnB,OAAOA,EAAKX,MAAM4C,cAAcC,QAAQ1D,EAAKyD,gBAAkB,O,6BAI5DF,EAAOxB,GACV,OAAOA,GACL,IAAK,MACH,OAAOwB,EACT,IAAK,SACH,OAAOA,EAAMxB,QAAO,SAACP,GAAD,OAAWA,EAAK5B,QACtC,IAAK,OACH,OAAO2D,EAAMxB,QAAO,SAACP,GAAD,OAAUA,EAAK5B,QACrC,QACE,OAAO2D,K,+BAGF,IAAD,EAC6B7C,KAAKX,MAAjC0C,EADD,EACCA,SAAUzC,EADX,EACWA,KAAO+B,EADlB,EACkBA,OACnB4B,EAAalB,EAASV,QAAO,SAACe,GAAD,OAAQA,EAAGlD,QAAM4D,OAC9CI,EAAYnB,EAASe,OAASG,EAE9BE,EAAenD,KAAKqB,OAAOrB,KAAKoD,OAAOrB,EAAWzC,GAAO+B,GAChE,OACE,yBAAKlC,UAAU,YACb,kBAAC,EAAD,CAAWF,KAAMiE,EAAWhE,KAAM+D,IAChC,yBAAK9D,UAAU,oBACf,kBAAC,EAAD,CAAaI,eAAgBS,KAAKT,iBAClC,kBAAC,EAAD,CACG8B,OAAQA,EACRC,eAAgBtB,KAAKsB,kBAGxB,kBAAC,EAAD,CAAUX,MAAOwC,EACP/C,UAAWJ,KAAKiC,WAChB5B,kBAAmBL,KAAKK,kBACxBC,aAAcN,KAAKM,eAC7B,kBAAC,EAAD,CAAUsB,MAAS5B,KAAKsC,e,GAlIArC,aCJlCoD,IAASC,OAAO,kBAAC,EAAD,MACZC,SAASC,eAAe,W","file":"static/js/main.a5abea09.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader","import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n        <h1>My Todo list</h1>\r\n        <h2>{toDo} more todo,done {done}</h2>\r\n        </div>\r\n    )\r\n    \r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel","import React,{Component} from 'react';\r\nimport './search-panel.css';\r\n\r\n\r\nexport default class SearchPanel extends Component  {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value\r\n        this.setState({term})\r\n        this.props.onSearchChange(term)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                onChange={this.onSearchChange}\r\n               />\r\n            </div>\r\n        )  \r\n    }\r\n    \r\n   \r\n}\r\n\r\n ","import TodoListItem from './todo-list-item'\r\n\r\nexport default TodoListItem","import React,{Component} from 'react'\r\nimport './todo-list-item.css'\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\nrender() {\r\n        const { label, onDeleted, \r\n                onToggleImportant, onToggleDone,\r\n                important, done } = this.props\r\n\r\n       \r\n        let classNames = 'todo-list-item'\r\n        if(done) {\r\n            classNames += ' done'\r\n        }\r\n        if(important) {\r\n            classNames += ' important'\r\n        }\r\n        return (\r\n           \r\n            <span className={classNames}>\r\n                <span \r\n                    className=\"todo-list-item-label\" \r\n                    \r\n                    onClick={onToggleDone}>\r\n                    \r\n                { label }\r\n                </span>\r\n            \r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={onToggleImportant}>\r\n                   <i className=\"fa fa-exclamation\"/>\r\n                </button>\r\n                 <button type=\"button\"\r\n                         className=\"btn btn-outline-danger btn-sm float-right\"\r\n                         onClick={ onDeleted}>\r\n                   <i className=\"fa fa-trash\"/>\r\n                </button>\r\n            </span>\r\n    \r\n            \r\n        \r\n        );\r\n     }\r\n}\r\n\r\n  \r\n\r\n ","import TodoList from './todo-list'\r\n\r\nexport default TodoList","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css'\r\n\r\n const TodoList = ({ todos , onDeleted, \r\n                     onToggleImportant, \r\n                     onToggleDone}) => {\r\n    \r\n    const elements = todos.map((item) => {\r\n        \r\n      const { id, ...itemProps} = item\r\n        return (\r\n        <li key={item.id} className=\"list-group-item\">\r\n          <TodoListItem {...itemProps }\r\n          onDeleted={() => {onDeleted(id)}}\r\n          onToggleImportant={() => { onToggleImportant(id)}}\r\n          onToggleDone={() => { onToggleDone(id)}}\r\n          />\r\n         </li>\r\n)});\r\n    return (\r\n       <ul className=\"list-group todo-list\">\r\n        { elements }\r\n       </ul>\r\n     );\r\n  };\r\n\r\n  export default  TodoList;\r\n","import ItemStatusFilter from './item-status-filter'\r\n\r\nexport default ItemStatusFilter","import React,{Component} from 'react';\r\nimport './item-status-filter.css'\r\n\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n     buttons = [\r\n        {name: 'all' , label: 'All'},\r\n        {name: 'active' , label: 'Active'},\r\n        {name: 'done' , label: 'done'}\r\n    ];\r\n    render() {\r\n        const { filter, onChangeFilter } = this.props\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz  = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick = {() => onChangeFilter(name)}>\r\n                {label}\r\n                </button>\r\n            )\r\n        })\r\n          return (\r\n                <div className=\"btn btn-group\">\r\n                   {buttons}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n// const ItemStatusFilter = () => {\r\n//     return (\r\n//         <div className=\"btn btn-group\">\r\n//             <button type=\"button\"\r\n//             className=\"btn btn-info\">\r\n//             All\r\n//             </button>\r\n\r\n//             <button type=\"button\"\r\n//             className=\"btn btn-outline-secondary\">\r\n//             Active\r\n//             </button>\r\n\r\n//             <button type=\"button\"\r\n//             className=\"btn btn-outline-secondary\">\r\n//             Done\r\n//             </button>\r\n//         </div>\r\n//     );\r\n// };\r\n// export default ItemStatusFilter","import AddItem from './add-item'\r\n\r\n\r\nexport default AddItem","import React,{Component} from 'react'\r\nimport './add-item.css'\r\n\r\nexport default class AddItem extends Component  {\r\n    state = {\r\n        label: '',\r\n    }\r\n    onLabelChange = (e) => {\r\n       this.setState({\r\n            label: e.target.value\r\n       })\r\n    } \r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onAdd(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n            return(\r\n             <form className=\"add-item d-flex\"\r\n             onSubmit = {this.onSubmit}>\r\n                <input \r\n                   type=\"text\" \r\n                   className=\"form-control\"\r\n                   onChange={this.onLabelChange}\r\n                   placeholder=\"What needs to be done\"\r\n                   value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\"\r\n                   >\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n            )\r\n    }\r\n     \r\n    \r\n}  \r\n\r\n "," import App from './app'\r\n\r\n export default App;","import React,{ Component } from 'react'\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport './app.css'\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport AddItem from '../add-item'\r\n\r\n\r\n\r\n \r\n export default class App extends Component {\r\n\r\n  maxId = 100\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'), \r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all' //all active done\r\n}\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n   \r\n  deleteItem = (id) => {\r\n     this.setState(({ todoData }) => {\r\n        const idx = todoData.findIndex((el) => el.id === id )\r\n        const newArray = [\r\n          ...todoData.slice(0, idx),\r\n          ...todoData.slice(idx + 1)\r\n       ] \r\n\r\n      return {\r\n        todoData: newArray\r\n      } \r\n     })\r\n}\r\naddItem = (text) => {\r\n   //generate id\r\n    const newItem = this.createTodoItem(text)\r\n       \r\n   //add element in array\r\n   this.setState(({todoData}) => {\r\n    const newArr = [\r\n      ...todoData,\r\n      newItem \r\n    ] ;\r\n    return {\r\n      todoData: newArr\r\n    }\r\n   });\r\n}\r\n\r\ntoggleProperty = (arr, id, propName) => {\r\n  const idx = arr.findIndex((el) => el.id === id )\r\n  // 1. Update object\r\n  const oldItem = arr[idx]\r\n  const newItem = {...oldItem,\r\n        [propName]: !oldItem[propName]};\r\n  //2. Constructor newArray\r\n   \r\n  return [\r\n    ...arr.slice(0, idx),\r\n    newItem,\r\n    ...arr.slice(idx + 1)\r\n  ]\r\n}\r\nonToggleImportant = (id) => {\r\n  this.setState(({ todoData }) => {\r\n    return {\r\n      todoData: this.toggleProperty(todoData, id , 'important')\r\n    }\r\n})\r\n}\r\n\r\nonToggleDone = (id) => {\r\n this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id , 'done')\r\n      }\r\n })\r\n}\r\n\r\nonSearchChange = (term) => {\r\n  this.setState({ term })\r\n}\r\n\r\nonChangeFilter = (filter) => {\r\n  this.setState({ filter })\r\n}\r\n\r\nsearch(items, term) {\r\n  if(term.length === 0) {\r\n    return items\r\n  }\r\n  return items.filter((item) => {\r\n    return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n  });\r\n}\r\n\r\nfilter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items\r\n    }\r\n}\r\n   render() {\r\n     const { todoData, term , filter } = this.state\r\n     const doneCount =  todoData.filter((el) => el.done).length\r\n     const todoCount = todoData.length - doneCount\r\n\r\n     const visibleItems = this.filter(this.search(todoData , term), filter)\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n          <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter \r\n             filter={filter}\r\n             onChangeFilter={this.onChangeFilter}\r\n          />\r\n          </div>\r\n          <TodoList todos={visibleItems} \r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant} \r\n                    onToggleDone={this.onToggleDone}/> \r\n          <AddItem  onAdd ={ this.addItem}/>\r\n      </div>\r\n    )\r\n   }\r\n}\r\n\r\n\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n \r\n\r\n\r\n\r\nReactDOM.render(<App />, \r\n    document.getElementById('root'));"],"sourceRoot":""}